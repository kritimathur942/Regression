# -*- coding: utf-8 -*-
"""SVR Regression.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K7_g3PAQmmeSUpd41kbb3cbosNuxsOM3

# Support Vector Regression (SVR)

## Importing Libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

"""## Importing Data Set"""

dataset = pd.read_csv('/content/Salary Data Support Vector regr.csv')
X = dataset.iloc[:, 1:-1].values
y = dataset.iloc[:, -1].values

print(X)

print(y)

"""## Feature Scaling

the process of normalizing the range of features in a dataset
"""

y = y.reshape(len(y), 1)

X = X.reshape(len(X), 1)

print(y)

"""## Training the SVR model on the whole dataset

StandardScaler removes the mean and scales each feature/variable to unit variance.
"""

from sklearn.preprocessing import StandardScaler
sc_X = StandardScaler()
sc_y = StandardScaler()

X = sc_X.fit_transform(X)
y = sc_y.fit_transform(y)

print(X)

print(y)

"""both values have been scaled into our values

"""

from sklearn.svm import SVR

regressor = SVR(kernel = 'rbf') #trained
regressor.fit(X, y)

"""kernel

## Predicting a new result
"""

sc_y.inverse_transform(regressor.predict(sc_X.transform([[6.5]])).reshape(-1, 1))

"""## Visualising the SVR results"""

plt.scatter(sc_X.inverse_transform(X), sc_y.inverse_transform(y), color = 'red')
plt.plot(sc_X.inverse_transform(X), sc_y.inverse_transform(regressor.predict(X).reshape(-1,1)), color = 'blue')
plt.title('Truth or bluff')
plt.xlabel('position level')
plt.ylabael('salary')
plt.show()